package br.com.a3sitsolutions.tempo_box.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.Components;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class OpenApiConfig {

    @Value("${app.version:1.0.0}")
    private String appVersion;

    @Value("${server.servlet.context-path:}")
    private String contextPath;

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("Tempo Box API")
                        .version(appVersion)
                        .description("""
                                ## Sistema de Compartilhamento Tempor√°rio de Arquivos
                                
                                O **Tempo Box** √© uma API REST para upload e compartilhamento tempor√°rio de arquivos com controle de expira√ß√£o autom√°tica.
                                
                                ### Principais Funcionalidades:
                                - üìÅ **Upload de arquivos** com dura√ß√£o personalizada
                                - üîí **Autentica√ß√£o por token** est√°tico
                                - üë§ **Filtragem por ID Token** para organiza√ß√£o de arquivos por usu√°rio
                                - ‚è∞ **Auto-expira√ß√£o** baseada em tempo configur√°vel
                                - üóÇÔ∏è **Metadados customiz√°veis** (reposit√≥rio, commit, branch, etc.)
                                - üìä **Suporte a arquivos** at√© 100MB
                                - üîÑ **Limpeza autom√°tica** de arquivos expirados
                                
                                ### Casos de Uso:
                                - Compartilhamento tempor√°rio de builds/artefatos
                                - Transfer√™ncia segura de arquivos sens√≠veis
                                - Integra√ß√£o com pipelines CI/CD
                                - Distribui√ß√£o tempor√°ria de documentos
                                - Cache de arquivos com TTL autom√°tico
                                
                                ### Autentica√ß√£o:
                                Para usar a API, voc√™ precisa de um **Auth Token** v√°lido. Opcionalmente, pode usar um **ID Token** para filtrar arquivos espec√≠ficos do seu usu√°rio.
                                
                                ### URLs de Acesso:
                                - **Produ√ß√£o**: https://tempo-box.a3sitsolutions.com.br
                                - **Swagger UI**: https://tempo-box.a3sitsolutions.com.br/swagger-ui.html
                                - **API Docs**: https://tempo-box.a3sitsolutions.com.br/v3/api-docs
                                """)
                        .contact(new Contact()
                                .name("A3S IT Solutions")
                                .email("contato@a3sitsolutions.com.br")
                                .url("https://a3sitsolutions.com.br"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .servers(List.of(
                        new Server()
                                .url("https://tempo-box.a3sitsolutions.com.br" + contextPath)
                                .description("Servidor de Produ√ß√£o"),
                        new Server()
                                .url("http://localhost:8080" + contextPath)
                                .description("Servidor de Desenvolvimento")
                ))
                .components(new Components()
                        .addSecuritySchemes("AuthToken", new SecurityScheme()
                                .type(SecurityScheme.Type.APIKEY)
                                .in(SecurityScheme.In.HEADER)
                                .name("X-Auth-Token")
                                .description("Token de autentica√ß√£o para acesso √† API"))
                        .addSecuritySchemes("AccessToken", new SecurityScheme()
                                .type(SecurityScheme.Type.APIKEY)
                                .in(SecurityScheme.In.HEADER)
                                .name("Access-Token")
                                .description("Token de acesso para download de arquivos espec√≠ficos")))
                .addSecurityItem(new SecurityRequirement()
                        .addList("AuthToken"));
    }
}