name: Build and Deploy to Nexus

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  IMAGE_NAME: tempo-box
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: [self-hosted, a3s-ubt-srv-maranguape-01]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Run tests
      run: ./gradlew test

    - name: Build application
      run: ./gradlew build -x test

    - name: Login to Nexus Docker Registry
      run: |
        echo "${{ secrets.NEXUS_PASSWORD }}" | docker login ${{ secrets.NEXUS_REPOSITORY }}:8082 -u "${{ secrets.NEXUS_USER }}" --password-stdin

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.NEXUS_REPOSITORY }}:8082/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        docker build -t ${{ secrets.NEXUS_REPOSITORY }}:8082/${{ env.IMAGE_NAME }}:latest .

    - name: Push Docker image to Nexus
      run: |
        docker push ${{ secrets.NEXUS_REPOSITORY }}:8082/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.NEXUS_REPOSITORY }}:8082/${{ env.IMAGE_NAME }}:latest

    - name: Cleanup Docker images
      run: |
        docker rmi ${{ secrets.NEXUS_REPOSITORY }}:8082/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} || true
        docker rmi ${{ secrets.NEXUS_REPOSITORY }}:8082/${{ env.IMAGE_NAME }}:latest || true

    - name: Clean up Gradle cache
      run: |
        ./gradlew clean